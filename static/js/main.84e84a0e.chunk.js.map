{"version":3,"sources":["RTK/Slices/Cart-Slice.js","Components/Nav/Navbar.js","RTK/Slices/Product-Slice.js","Components/Products/Products.js","Components/Cart/Cart.js","App.js","reportWebVitals.js","RTK/Store.js","index.js"],"names":["CartSlice","createSlice","name","initialState","cartState","isOpen","reducers","Open","state","AddToCart","action","findedproduct","find","product","id","payload","quantity","productClone","push","RemoveFromCart","filter","p","console","log","ClearFromCart","actions","NavBar","dispatch","useDispatch","useSelector","cart","error","productts","React","createElement","Fragment","Alert","variant","Navbar","expand","fixed","className","Container","Link","to","Collapse","Nav","Button","onClick","length","getProducts","createAsyncThunk","async","_","thunkAPI","rejectWithValue","res","fetch","data","json","message","getCategories","specificeCategory","cat","concat","productSlice","products","isloading","categories","extraReducers","pending","fulfilled","rejected","Products","useEffect","map","key","size","Row","md","xs","lg","productt","Col","Card","style","width","height","Img","src","image","Body","Title","Text","price","Cart","totalPrice","reduce","acc","Offcanvas","show","onHide","placement","Header","closeButton","pro","Stack","gap","direction","alt","objectFit","title","class","toFixed","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","createRoot","document","getElementById","render","StrictMode","Provider"],"mappings":"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","file":"static/js/main.84e84a0e.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const CartSlice = createSlice({\r\n  name: \"cartslice\",\r\n  initialState: { cartState: [], isOpen: false },\r\n  reducers: {\r\n    Open: (state) => {\r\n      state.isOpen = !state.isOpen;\r\n    },\r\n    AddToCart: (state, action) => {\r\n      const findedproduct = state.cartState.find(\r\n        (product) => product.id === action.payload.id\r\n      );\r\n      if (findedproduct) {\r\n        findedproduct.quantity += 1;\r\n      } else {\r\n        const productClone = { ...action.payload, quantity: 1 };\r\n        state.cartState.push(productClone);\r\n      }\r\n    },\r\n    RemoveFromCart: (state, action) => {\r\n      state.cartState = state.cartState.filter(\r\n        (p) => p.id !== action.payload.id\r\n      );\r\n      console.log(action.payload);\r\n    },\r\n    ClearFromCart: (state, action) => {\r\n      state.cartState = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport default CartSlice.reducer;\r\nexport const { Open, AddToCart, RemoveFromCart, ClearFromCart } =\r\n  CartSlice.actions;\r\n","import React from \"react\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"../Nav/Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport { Open } from \"../../RTK/Slices/Cart-Slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst NavBar = () => {\r\n  const dispatch = useDispatch();\r\n  const cartState = useSelector((state) => state.cart.cartState);\r\n  const error = useSelector((state) => state.productts.error);\r\n\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Alert variant=\"danger\">{error} Data From Server </Alert>\r\n      ) : (\r\n        <Navbar expand=\"lg\" fixed=\"top\" className=\"bg-body-tertiary nav_css\">\r\n          <Container>\r\n            <Link to=\"/\" className=\"navbar-brand\">\r\n              My Store\r\n            </Link>\r\n            <Navbar.Collapse id=\"basic-navbar-nav \">\r\n              <Nav className=\"ms-auto \">\r\n                <Link className=\"nav-link\" to=\"/\">\r\n                  Products\r\n                </Link>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  className=\"ms-5 btn_style\"\r\n                  onClick={() => dispatch(Open())}\r\n                >\r\n                  <div>{cartState.length}</div>\r\n                  <i className=\"fa-solid fa-cart-shopping\"></i>\r\n                </Button>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const getProducts = createAsyncThunk(\r\n  \"productSlice/getProducts\",\r\n  async (_, thunkAPI) => {\r\n    const { rejectWithValue } = thunkAPI;\r\n    try {\r\n      const res = await fetch(\"https://fakestoreapi.com/products\");\r\n      const data = await res.json();\r\n      console.log(data, \"data\");\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\nexport const getCategories = createAsyncThunk(\r\n  \"productSlice/getCategories\",\r\n  async (_, thunkAPI) => {\r\n    const { rejectWithValue } = thunkAPI;\r\n    try {\r\n      const res = await fetch(\"https://fakestoreapi.com/products/categories\");\r\n      const data = await res.json();\r\n      console.log(data, \"data\");\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\nexport const specificeCategory = createAsyncThunk(\r\n  \"productSlice/specificeCategory\",\r\n  async (cat, thunkAPI) => {\r\n    const { rejectWithValue } = thunkAPI;\r\n    try {\r\n      const res = await fetch(\r\n        `https://fakestoreapi.com/products/category/${cat}`\r\n      );\r\n      const data = await res.json();\r\n      console.log(data, \"data\");\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst productSlice = createSlice({\r\n  name: \"productSlice\",\r\n  initialState: { products: [], isloading: false, error: null, categories: [] },\r\n  extraReducers: {\r\n    [getProducts.pending]: (state, action) => {\r\n      state.isloading = true;\r\n      state.error = null;\r\n    },\r\n    [getProducts.fulfilled]: (state, action) => {\r\n      state.isloading = false;\r\n      state.products = action.payload;\r\n      console.log(action.payload, \"action\");\r\n    },\r\n    [getProducts.rejected]: (state, action) => {\r\n      state.isloading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    //////////////Categories Actions//////////////////////////////////\r\n\r\n    [getCategories.pending]: (state, action) => {\r\n      state.isloading = true;\r\n      state.error = null;\r\n    },\r\n    [getCategories.fulfilled]: (state, action) => {\r\n      state.isloading = false;\r\n      state.categories = action.payload;\r\n    },\r\n    [getCategories.rejected]: (state, action) => {\r\n      state.isloading = false;\r\n      state.error = action.payload;\r\n    },\r\n    //////////////Specifice Category Actions//////////////////////////////////\r\n\r\n    [specificeCategory.pending]: (state, action) => {\r\n      state.isloading = true;\r\n      state.error = null;\r\n    },\r\n    [specificeCategory.fulfilled]: (state, action) => {\r\n      state.isloading = false;\r\n      state.products = action.payload;\r\n    },\r\n    [specificeCategory.rejected]: (state, action) => {\r\n      state.isloading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n// export const {} = bookSlice.actions;\r\nexport default productSlice.reducer;\r\n\r\n// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// export const getProducts = createAsyncThunk(\r\n//   \"productSlice/getProducts\",\r\n//   async (_, thunkAPI) => {\r\n//     try {\r\n//       const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n//       const data = await res.json();\r\n//       return data;\r\n//     } catch (error) {\r\n//       return error;\r\n//     }\r\n//   }\r\n// );\r\n\r\n// const productSlice = createSlice({\r\n//   initialState: { products: [] },\r\n//   name: \"productSlice\",\r\n//   extraReducers: {\r\n//     [getProducts.fulfilled]: (state, action) => {\r\n//       state.products = action.payload;\r\n//       console.log(action);\r\n//     },\r\n//   },\r\n// });\r\n\r\n// export default productSlice.reducer;\r\n","import React, { useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/esm/Container\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getProducts,\r\n  getCategories,\r\n  specificeCategory,\r\n} from \"../../RTK/Slices/Product-Slice\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"../Products/Products.css\";\r\nimport { AddToCart } from \"../../RTK/Slices/Cart-Slice\";\r\nconst Products = () => {\r\n  const dispatch = useDispatch();\r\n  const { products, isloading, categories } = useSelector(\r\n    (state) => state.productts\r\n  );\r\n  console.log(categories, \"categories\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts());\r\n    dispatch(getCategories());\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {isloading ? (\r\n        <h2 className=\"loadng\">Loading...</h2>\r\n      ) : (\r\n        <>\r\n          {categories.map((cat) => {\r\n            return (\r\n              <div className=\"Cat_Style\">\r\n                <Button\r\n                  key={cat}\r\n                  variant=\"outline-secondary\"\r\n                  size=\"sm\"\r\n                  onClick={() => dispatch(specificeCategory(cat))}\r\n                >\r\n                  {cat}\r\n                </Button>\r\n              </div>\r\n            );\r\n          })}\r\n          <Row md={2} xs={1} lg={3} className=\"g-3  marg\">\r\n            {products?.map((productt) => (\r\n              <Col key={productt.id}>\r\n                <Card\r\n                  className=\"mt-2\"\r\n                  style={{ width: \"auto \", height: \"auto\" }}\r\n                >\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src={productt.image}\r\n                    className=\"img-css mt-3\"\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>Tilte</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and\r\n                      make up the bulk of the card's content.\r\n                    </Card.Text>\r\n                    <div className=\"d-flex justify-content-between   justify-content-center\">\r\n                      <Button\r\n                        variant=\"primary btn-secondary\"\r\n                        className=\"mb-3\"\r\n                        onClick={() => dispatch(AddToCart(productt))}\r\n                      >\r\n                        Add To Cart\r\n                      </Button>\r\n\r\n                      <div className=\"text-muted justifay\">\r\n                        {\" \"}\r\n                        Price {productt.price}$\r\n                      </div>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Stack from \"react-bootstrap/Stack\";\r\nimport {\r\n  Open,\r\n  RemoveFromCart,\r\n  ClearFromCart,\r\n} from \"../../RTK/Slices/Cart-Slice\";\r\nimport \"../Cart/Cart.css\";\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const { isOpen, cartState } = useSelector((state) => state.cart);\r\n  console.log(cartState);\r\n  const totalPrice = cartState.reduce((acc, product) => {\r\n    acc = acc + product.price * product.quantity;\r\n    return acc;\r\n  }, 0);\r\n\r\n  return (\r\n    <>\r\n      <Offcanvas show={isOpen} onHide={() => dispatch(Open())} placement=\"end\">\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Cart</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body className=\" \" style={{ width: \"auto \" }}>\r\n          {cartState?.map((pro) => (\r\n            <Stack\r\n              key={pro.id}\r\n              gap={3}\r\n              className=\"mb-5 d-flex justify-content-center align-items-center\"\r\n              direction=\"horizontal\"\r\n            >\r\n              <img\r\n                src={pro.image}\r\n                alt=\"Girl in a jacket\"\r\n                width=\"100px\"\r\n                height=\"90px\"\r\n                style={{ objectFit: \"cover\" }}\r\n              />\r\n              <div className=\"p-2 font_size\">{pro.title}</div>\r\n              <div className=\"p-2 font_size\">x{pro.quantity}</div>\r\n              <div className=\"p-2\">{pro.price}$</div>\r\n              <Button\r\n                className=\"close\"\r\n                variant=\"outlined\"\r\n                onClick={() => dispatch(RemoveFromCart(pro))}\r\n              >\r\n                <i class=\"fa-regular fa-circle-xmark\"></i>\r\n              </Button>\r\n            </Stack>\r\n          ))}\r\n          <div className=\"d-flex justify-content-between pt-4 \">\r\n            <span>Total Price : {totalPrice.toFixed(2)}$</span>\r\n            <Button\r\n              variant=\"danger mb-5 \"\r\n              size=\"sm\"\r\n              onClick={() => dispatch(ClearFromCart())}\r\n            >\r\n              Clear\r\n            </Button>\r\n          </div>\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport NavBar from \"./Components/Nav/Navbar\";\nimport Products from \"./Components/Products/Products\";\nimport Cart from \"./Components/Cart/Cart\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const isOpen = useSelector((state) => state.cart.isOpen);\n\n  return (\n    <>\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Cart />\n          <Container className=\"\">\n            <Routes>\n              <Route path=\"/\" element={<Products />} />\n              {/* <Route path=\"/cart\" element={{} />*/}\n            </Routes>\n          </Container>\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport productSlice from \"./Slices/Product-Slice\";\r\nimport CartSlice from \"./Slices/Cart-Slice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    productts: productSlice,\r\n    cart: CartSlice,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./RTK/Store\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}